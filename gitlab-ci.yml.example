# Run on MRs, tags and on push to default branch
workflow:
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

variables:
  # Image names
  STAGING_IMAGE: '$CI_REGISTRY_IMAGE/b2b:$CI_COMMIT_SHORT_SHA'
  PREPRODUCTION_IMAGE: '$CI_REGISTRY_IMAGE/b2b:$CI_COMMIT_TAG'
  BETA_IMAGE: '$CI_REGISTRY_IMAGE/b2b:$CI_COMMIT_TAG-beta'
  PRODUCTION_IMAGE: '$CI_REGISTRY_IMAGE/b2b:$CI_COMMIT_TAG-production'

  # API
  STAGING_API_URL: 'https://admin.b2b-staging.kpb.lt/'
  PREPRODUCTION_API_URL: 'https://sandbox.api.admin.b2b.kupibilet.ru/'
  BETA_API_URL: 'https://beta.api.admin.b2b.kupibilet.ru/'
  PRODUCTION_API_URL: 'https://api.admin.b2b.kupibilet.ru/'

stages:
  - check
  - build
  - build_image
  - deploy


# Checks

format_check:
  stage: check
  tags: [ b2b-runner ]
  image: node:12.17-alpine
  script:
    - yarn install --frozen-lockfile --prefer-offline
    - yarn run fmt-check

lint:
  stage: check
  tags: [ b2b-runner ]
  image: node:12.17-alpine
  script:
    - yarn install --frozen-lockfile --prefer-offline
    - yarn run lint


# Build app & image

build:
  stage: build
  tags: [ b2b-runner ]
  image: node:12.17-alpine
  before_script:
    - >
      if [ -n "$CI_COMMIT_TAG" ] && [ -n "$PRODUCTION" ];
      then export REACT_APP_API_URL=${PRODUCTION_API_URL};
      elif [ -n "$CI_COMMIT_TAG" ] && [ -n "$BETA" ];
      then export REACT_APP_API_URL=${BETA_API_URL};
      elif [ -n "$CI_COMMIT_TAG" ];
      then export REACT_APP_API_URL=${PREPRODUCTION_API_URL};
      else export REACT_APP_API_URL=${STAGING_API_URL};
      fi
  script:
    - echo $REACT_APP_API_URL
    - yarn install --frozen-lockfile --prefer-offline
    - yarn build
  artifacts:
    paths:
      - build
    expire_in: 25 mins

build_image:
  stage: build_image
  tags: [ b2b-runner ]
  image: docker:latest
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  before_script:
    - >
      if [ -n "$CI_COMMIT_TAG" ] && [ -n "$PRODUCTION" ];
      then IMAGE_NAME=${PRODUCTION_IMAGE};
      elif [ -n "$CI_COMMIT_TAG" ] && [ -n "$BETA" ];
      then IMAGE_NAME=${BETA_IMAGE};
      elif [ -n "$CI_COMMIT_TAG" ];
      then IMAGE_NAME=${PREPRODUCTION_IMAGE};
      else IMAGE_NAME=${STAGING_IMAGE};
      fi
  dependencies:
    - build
  script:
    - echo $IMAGE_NAME
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $IMAGE_NAME .
    - docker push $IMAGE_NAME


# Deploy

deploy_staging:
  stage: deploy
  tags: [ b2b-runner ]
  image: docker:latest
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  environment:
    name: staging
    url: http://admin.b2b.nodejs-staging.amazon
  dependencies: []
  before_script:
    - 'echo "Deploy to staging, image: ${STAGING_IMAGE}"'
    - which ssh || (apk add --no-cache openssh-client)
    - echo "$SSH_PRIVATE_KEY_FOR_NODEJS_STAGING" > ./id_rsa
    - chmod 600 ./id_rsa
  script:
    - ssh -o StrictHostKeychecking=no -i ./id_rsa ci@nodejs-staging.amazon "
      docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY} &&
      docker stop b2b-admin || true &&
      docker rm b2b-admin || true &&
      docker pull ${STAGING_IMAGE} &&
      docker run -d
      --name b2b-admin
      --env VIRTUAL_HOST=admin.b2b.nodejs-staging.amazon
      ${STAGING_IMAGE}"
  after_script:
    - docker rmi ${STAGING_IMAGE}
    - rm ./id_rsa

deploy_preproduction:
  stage: deploy
  tags: [ b2b-runner ]
  image: docker:latest
  rules:
    - if: '$CI_COMMIT_TAG && $BETA == null && $PRODUCTION == null'
      when: manual
  environment:
    name: preproduction
    url: https://sandbox.admin.b2b.kupibilet.ru/
  dependencies: []
  before_script:
    - 'echo "Deploy to preproduction, image: ${PREPRODUCTION_IMAGE}"'
    - which ssh || (apk add --no-cache openssh-client)
    - echo "$SSH_PRIVATE_KEY_FOR_PREPRODUCTION" > ./id_rsa
    - chmod 600 ./id_rsa
  script:
    - ssh -o StrictHostKeychecking=no -i ./id_rsa ci@dev-b2b-docker.amazon "
      docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY} &&
      docker rm -f b2b-admin || true &&
      docker pull ${PREPRODUCTION_IMAGE} &&
      docker run -d -p 4002:80
      --name b2b-admin
      --env VIRTUAL_HOST=sandbox.admin.b2b.kupibilet.ru
      ${PREPRODUCTION_IMAGE}"
  after_script:
    - docker rmi ${PREPRODUCTION_IMAGE}
    - rm ./id_rsa

deploy_beta:
  stage: deploy
  tags: [ b2b-runner ]
  image: docker:latest
  rules:
    - if: '$CI_COMMIT_TAG && $BETA'
      when: manual
  environment:
    name: beta
    url: https://beta.admin.b2b.kupibilet.ru/
  dependencies: []
  before_script:
    - 'echo "Deploy to beta, image: ${BETA_IMAGE}"'
    - which ssh || (apk add --no-cache openssh-client)
    - echo "$SSH_PRIVATE_KEY_FOR_BETA" > ./id_rsa
    - chmod 600 ./id_rsa
  script:
    - ssh -o StrictHostKeychecking=no -i ./id_rsa ci@beta-b2b-docker.amazon "
      docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY} &&
      docker rm -f b2b-admin || true &&
      docker pull ${BETA_IMAGE} &&
      docker run -d -p 4002:80
      --name b2b-admin
      --env VIRTUAL_HOST=beta.admin.b2b.kupibilet.ru
      ${BETA_IMAGE}"
  after_script:
    - docker rmi ${BETA_IMAGE}
    - rm ./id_rsa

deploy_production:
  stage: deploy
  tags: [ b2b-runner ]
  image: docker:latest
  rules:
    - if: '$CI_COMMIT_TAG && $PRODUCTION'
      when: manual
  environment:
    name: production
    url: https://admin.b2b.kupibilet.ru/
  dependencies: []
  before_script:
    - 'echo "Deploy to production, image: ${PRODUCTION_IMAGE}"'
    - which ssh || (apk add --no-cache openssh-client)
    - echo "$SSH_PRIVATE_KEY_FOR_PRODUCTION" > ./id_rsa
    - chmod 600 ./id_rsa
  script:
    - ssh -o StrictHostKeychecking=no -i ./id_rsa ci@prod-b2b-docker.amazon "
      docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY} &&
      docker rm -f b2b-admin || true &&
      docker pull ${PRODUCTION_IMAGE} &&
      docker run -d -p 4002:80
      --name b2b-admin
      --env VIRTUAL_HOST=admin.b2b.kupibilet.ru
      ${PRODUCTION_IMAGE}"
  after_script:
    - docker rmi ${PRODUCTION_IMAGE}
    - rm ./id_rsa
